# -*- coding: utf-8 -*-
#
# unitdata.py
#
# Copyright (C) 2013 Steve Canny scanny@cisco.com
#
# This module is part of python-opc and is released under the MIT License:
# http://www.opensource.org/licenses/mit-license.php

"""Test data builders for unit tests"""

from docx.oxml.base import nsdecls, oxml_fromstring


class BaseBuilder(object):
    """
    Provides common behavior for all data builders.
    """
    nsdecls = ' %s' % nsdecls('w')

    def __init__(self):
        """Establish instance variables with default values"""
        self._empty = False
        self._indent = 0
        self._nsdecls = ''

    @property
    def element(self):
        """Return element based on XML generated by builder"""
        return oxml_fromstring(self.xml)

    @property
    def is_empty(self):
        return True

    def with_indent(self, indent):
        """Add integer *indent* spaces at beginning of element XML"""
        self._indent = indent
        return self

    def with_nsdecls(self):
        self._nsdecls = self.nsdecls
        return self


class CT_PBuilder(BaseBuilder):
    """
    Test data builder for a CT_P (<w:p>) XML element that appears within the
    body element of a document.xml file.
    """
    def __init__(self):
        """Establish instance variables with default values"""
        super(CT_PBuilder, self).__init__()

    @property
    def xml(self):
        """Return element XML based on attribute settings"""
        indent = ' ' * self._indent
        xml = '%s<w:p%s/>\n' % (indent, self._nsdecls)
        return xml


def a_p():
    """Return a CT_PBuilder instance"""
    return CT_PBuilder()
